#!/usr/bin/env node

const { execSync } = require('child_process');
const fs = require('fs');
const path = require('path');

console.log('üî¥ Cambiando a ambiente de PRODUCCI√ìN...');

function copyFile(source, destination) {
  try {
    fs.copyFileSync(source, destination);
    console.log(`‚úÖ Copiado: ${source} ‚Üí ${destination}`);
  } catch (error) {
    console.error(`‚ùå Error copiando ${source}: ${error.message}`);
  }
}

async function switchToProduction() {
  try {
    console.log('\nüìã Configurando archivos de entorno para producci√≥n...');
    
    copyFile(
      path.join(__dirname, '../backend/env.production'),
      path.join(__dirname, '../backend/.env')
    );
    
    copyFile(
      path.join(__dirname, '../frontend/env.production'),
      path.join(__dirname, '../frontend/.env')
    );
    
    console.log('\n‚úÖ ¬°Ambiente de producci√≥n configurado!');
    console.log('\nüåê URLs de Producci√≥n:');
    console.log('   - Backend: [Configurar URL de producci√≥n]');
    console.log('   - Frontend: [Configurar URL de producci√≥n]');
    console.log('   - Base de datos: trn_extraccion_prod');
    
    console.log('\n‚ö†Ô∏è  IMPORTANTE:');
    console.log('   - Este ambiente usa la base de datos de producci√≥n');
    console.log('   - Los cambios afectar√°n datos reales');
    console.log('   - Usar solo para despliegues finales');
    
  } catch (error) {
    console.error('\n‚ùå Error configurando ambiente de producci√≥n:', error.message);
    process.exit(1);
  }
}

switchToProduction();
