const axios = require('axios');

const BASE_URL = 'http://localhost:3001/api';

async function testMetrosSuperficieCompleto() {
  try {
    console.log('üß™ Iniciando pruebas completas de Metros Superficie...\n');

    // 1. Verificar que el servidor est√© funcionando
    console.log('1. Verificando servidor...');
    try {
      const response = await axios.get(`${BASE_URL.replace('/api', '')}/health`);
      console.log('‚úÖ Servidor funcionando:', response.data.message);
    } catch (error) {
      console.log('‚ùå Error de conexi√≥n al servidor:', error.message);
      return;
    }

    // 2. Probar endpoint de zonas (sin autenticaci√≥n)
    console.log('\n2. Probando endpoint de zonas...');
    try {
      const response = await axios.get(`${BASE_URL}/zonas`);
      console.log('‚úÖ Zonas obtenidas:', response.data.length, 'zonas encontradas');
    } catch (error) {
      console.log('‚ùå Error obteniendo zonas:', error.response?.data || error.message);
    }

    // 3. Probar endpoint de sectores por zona
    console.log('\n3. Probando endpoint de sectores por zona...');
    try {
      const response = await axios.get(`${BASE_URL}/metros-superficie/sectores/1`);
      console.log('‚úÖ Sectores por zona obtenidos:', response.data.length, 'sectores encontrados');
    } catch (error) {
      console.log('‚ùå Error obteniendo sectores:', error.response?.data || error.message);
    }

    // 4. Probar endpoint de estad√≠sticas por quincena
    console.log('\n4. Probando endpoint de estad√≠sticas por quincena...');
    try {
      const response = await axios.get(`${BASE_URL}/metros-superficie/estadisticas/quincena?year=2025&month=7`);
      console.log('‚úÖ Estad√≠sticas por quincena obtenidas');
      console.log('   - Primera quincena:', response.data.quincena1?.totales?.HEMBRA?.metros || 0, 'm¬≤ Hembra');
      console.log('   - Primera quincena:', response.data.quincena1?.totales?.MACHO?.metros || 0, 'm¬≤ Macho');
    } catch (error) {
      console.log('‚ùå Error obteniendo estad√≠sticas:', error.response?.data || error.message);
    }

    // 5. Probar endpoint de mes anterior
    console.log('\n5. Probando endpoint de mes anterior...');
    try {
      const response = await axios.get(`${BASE_URL}/metros-superficie/estadisticas/mes-anterior?year=2025&month=7`);
      console.log('‚úÖ Mes anterior obtenido:', response.data.total_metros || 0, 'm¬≤');
    } catch (error) {
      console.log('‚ùå Error obteniendo mes anterior:', error.response?.data || error.message);
    }

    console.log('\nüéâ Pruebas completadas!');
    console.log('\nüìã Resumen:');
    console.log('- Si ves "‚úÖ" significa que el endpoint funciona correctamente');
    console.log('- Si ves "‚ùå" significa que hay un error que necesita ser corregido');
    console.log('\nüåê Para probar la interfaz web, ve a: http://localhost:3000/metros-superficie');
    console.log('üîß Funcionalidades implementadas:');
    console.log('   - Vista de tabla completa');
    console.log('   - Vista separada por Hembra/Macho');
    console.log('   - Estad√≠sticas quincenales');
    console.log('   - C√°lculo autom√°tico de metros cuadrados');
    console.log('   - Formulario de registro (solo administradores)');

  } catch (error) {
    console.error('‚ùå Error general en las pruebas:', error.message);
  }
}

testMetrosSuperficieCompleto();